#!/bin/sh

########
# setup a new laptop
########

# import common functions
# shellcheck disable=SC1091
. ./libexec/helpers


# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

# bail on the first error
set -e

# setup our home bin dir
fancy_echo "Setup ~/bin"
if [ ! -d "$HOME/bin/" ]; then
  mkdir "$HOME/bin"
fi

fancy_echo "touch ~/.zshrc"
if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

fancy_echo "mkdir -p ~/.config"
if [ ! -d "$HOME/.config" ]; then
  mkdir -p ~/.config
fi

fancy_echo "Setup .zprofile"
cp .zprofile ~/.zprofile
# TODO: link to .profile too

# This is where homebrew installs to
HOMEBREW_PREFIX="/usr/local"

# LOGNAME is defined by the shell
# groups: `admin` - default for mac
fancy_echo "Setup Homebrew Directory"
if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

##
# Install Homebrew
##

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
fi

fancy_echo "Updating Homebrew formulae ..."
brew update

fancy_echo "Installing from Homebrew ..."
if [ "$(uname)" == "Darwin" ]; then
  # Install homebrew packages
  fancy_echo "Checking Homebrew dependencies... "
  brew bundle check || (
    brew bundle
    echo
  )
fi

fancy_echo "Configure Hammerspoon ..."
mkdir -p ~/.hammerspoon
cp ./hammerspoon.lua ~/.hammerspoon/init.lua

fancy_echo "Configuring Ruby ..."
eval "$(rbenv init -)"
ruby_version="$(find_latest_ruby)"
if ! rbenv versions | grep -Fq "$ruby_version"; then
  RUBY_CONFIGURE_OPTS=--with-openssl-dir=/usr/local/opt/openssl rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"
gem update --system
gem_install_or_update 'bundler'
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

fancy_echo "Installing Rust ..."
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
source $HOME/.cargo/env

fancy_echo "Configuring Starship"
cp ./.config/starship.toml ~/.config/starship.toml
# eval "$(starship init zsh)"

fancy_echo "Configuring Git ..."
# cp ~/.paver/.gitconfig ~/.gitconfig

fancy_echo "Configuring psqlrc"
cp ./.psqlrc ~/.psqlrc
